scalar Date

type Query {
  allBooks: [Book]
  getBook(isbn: String!): Book
  allMagazines: [Magazine]
  allMaterials: [Material]
  topics: [Topic]
  bookMajorGenres: [String]
}

type Mutation {
  addBook(input: AddBookInput!): Book
}

input AddBookInput {
  title: String!
  author: String!
  year: Int!
  isbn: String!
  series: String
  publishedDate: Date
  price: String!
  summary: String
  description: String
  imageUrl: String
  genreMajor: String
  genreMinor: String
}

interface Material {
  id: ID!
  title: String
}

type Book implements Material {
  id: ID!
  title: String
  author: String
  year: Int!
  isbn: String!
  url: String
  series: String
  publishedDate: Date
  price: String
  summary: String
  description: String
  imageUrl: String
  genreMajor: String
  genreMinor: String
  retail: Retail
  relatedBooks: [Book]
  relatedReports: [Report]
}

type Magazine implements Material {
  id: ID!
  title: String
  isbn: String!
  publisher: String
}

type Report {
  id: ID!
  title: String
  url: String
  summary: String
  content: String
}

type Retail {
  direct: String
  amazon: String
  rakutenBooks: String
  honto: String
}

type Topic {
  id: ID!
  title: String
  url: String
  category: String
  publishedDate: String
}
